#!/usr/athena/bin/perl
#
# A program to assign secret santas randomly
#

# $date should be set to the date of the last hall feed at which
# secret santas will be revealed
$date = "Thurs, Dec 2";

srand;

# get file name from args
$filename=$ARGV[0]; 

if (! $filename) {
    print "Usage: secretsanta <filename>\n";
    print "\t where <filename> is a text file that contains\n";
    print "\t the usernames of all people participating (one name per line)\n";
    print "\nYou can run:\n";
    print "\tathena% secretsanta help\n";
    print "for more detailed info.\n\n\n";
    exit 0;
}

if ($filename eq "help") {
    print "Secret Santa randomization program by \n";
    print "Jonathan Reed (jdreed\@mit.edu).  Copyright 1999\n";
    print "\nThe format of the text file is as follows:\n";
    print "\tjoeuser\n";
    print "\tsuzieuser\n";
    print "\totheruser\n";
    print "\t# This blank line must be here\n";
    print "THAT LAST LINE MUST BE PRESENT\n";
    print "This program is Y2K compliant :-)\n\n";
    exit 0;
}

open(NAMEFILE, $filename);

# create array from file
@names = <NAMEFILE>;

close(NAMEFILE);

# get length of array
$len = $#names;

# chop off last line in file
splice(@names, $len, 1);

# recalculate length
$len = $#names;
$len++;

# create new array, and initialize each cell to given value
@partners = ("foo\n") x $len;


print "$len people in list.\n";

$j = 0;

while ($j < $len) {
    $x = int(rand($len));                     #random num
    # make sure we don't overwrite a name
    # already in new list
    if ($partners[$x] =~ /foo/) {            
	$partners[$x] = $names[$j];
	$j++;
    }
}

print "------------\n";

# initialize error checking var
$error = "";    

# print out list nicely
for ($i = 0; $i < $len; $i++) {
    $foo = $names[$i];
    chomp $foo;
    #print $foo;
    #print " --> ";
    #print $partners[$i];
    if ($names[$i] eq $partners[$i]) {
	$error = $names[$i];
    }
}

# make sure no one is assigned to themselves
if ($error) {
    chomp $error;
    print "**Oops. $error is assigned to him/herself.\n**Run the program again.\n"
    }

# send mail if this is the final assignment:

print "\n";
print "Shall I send email to notify people of their santees (y/[n]): ";
$answer=getc;
print "\n";

if ($answer eq "y") {
    print "There were errors.  Are you SURE you want to send mail?  CTRL-C to abort, Return to continue.\n";
    $ans = getc;
    for ($i = 0; $i < $len; $i++) {
	$foo = $names[$i];
	chomp $foo;
	$bar = $partners[$i];
	chomp $bar;
	$mailstring = "echo \"Greetings! \nYour secret santee is $bar. \nBe sure to give them your gift by $date. \nThe identity of secret santas will be revealed at the hall feed on that day.\nPlease remember the 10 dollar suggested spending limit.\n\nHo ho ho! (yeah, it's lame but festive) \n\" | mhmail $foo\@mit.edu";
	print "Sending mail to $foo\n";
	system($mailstring);
    }
}
    


# done.  Woohoo!
exit 0;






